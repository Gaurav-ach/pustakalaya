@model IEnumerable<(Pusthakalaya.Models.Cart CartItem, decimal DiscountedPrice, bool OnSale)>

@{
    ViewData["Title"] = "Checkout";
}

<style>
    /* Container */
    .checkout-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 1.5rem 1rem;
        background: linear-gradient(180deg, #fefce8, #f5e6b8); /* Light amber gradient to match home page */
        border-radius: 0.75rem; /* 12px */
    }

        /* Heading */
        .checkout-container h2 {
            font-size: 1.875rem; /* 2xl equivalent */
            font-weight: 700;
            color: #92400e; /* Dark amber-brown to match hero heading */
            margin-bottom: 1.5rem;
            text-align: center;
        }

    /* Error Message */
    .error-message {
        background: #fee2e2; /* Light red background for errors */
        color: #b91c1c; /* Dark red text */
        padding: 1rem;
        border-radius: 0.5rem; /* 8px */
        margin-bottom: 1rem;
        text-align: center;
        font-size: 0.875rem;
    }

    /* Checkout Card */
    .checkout-card {
        background: #fefce8; /* Light amber to match home page */
        border-radius: 0.75rem; /* 12px */
        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        max-width: 48rem; /* 3xl equivalent */
        margin: 0 auto;
        border: 1px solid rgba(43, 108, 176, 0.2); /* Subtle blue border to tie into nav */
    }

    /* Cart Items Grid */
    .cart-items-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
    }

    /* Cart Item Card */
    .cart-item-card {
        background: #ffffff;
        border-radius: 0.75rem; /* 12px */
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 1rem;
        display: flex;
        flex-direction: column;
        position: relative;
    }

        .cart-item-card .sale-badge {
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
            background: #b91c1c; /* Red for sale badge */
            color: #ffffff;
            font-size: 0.75rem;
            font-weight: 600;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem; /* 4px */
        }

        .cart-item-card img {
            width: 100%;
            height: 9rem; /* 36 equivalent */
            object-fit: cover;
            border-radius: 0.5rem; /* 8px */
            margin-bottom: 0.5rem;
        }

        .cart-item-card .no-image {
            width: 100%;
            height: 9rem; /* 36 equivalent */
            background: #fef9c3; /* Lighter amber for placeholder */
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 0.5rem; /* 8px */
            margin-bottom: 0.5rem;
            color: #4b5563; /* Dark gray for text */
            font-size: 0.875rem;
        }

        .cart-item-card h3 {
            font-size: 1rem; /* base equivalent */
            font-weight: 600;
            color: #92400e; /* Dark amber-brown to match headings */
            margin-bottom: 0.25rem;
        }

        .cart-item-card p {
            font-size: 0.875rem;
            color: #4b5563; /* Dark gray for secondary text */
            margin-bottom: 0.25rem;
        }

        .cart-item-card .price-info .original-price {
            text-decoration: line-through;
            color: #6b7280; /* Slightly darker gray for readability */
        }

        .cart-item-card .price-info .discounted-price {
            color: #047857; /* Dark green for discounted price */
            margin-left: 0.5rem;
        }

    /* Total Price and Discount Section */
    .total-section {
        margin-top: 1.5rem;
    }

        .total-section p {
            font-size: 0.875rem;
            color: #2d3748; /* Dark gray for primary text */
            margin-bottom: 0.25rem;
        }

        .total-section .final-price {
            font-weight: 600;
        }

    /* Claim Code Note */
    .claim-code-note {
        margin-top: 1rem;
        text-align: center;
        font-size: 0.875rem;
        color: #4b5563; /* Dark gray for secondary text */
    }

    /* Buttons */
    .button-group {
        margin-top: 1rem;
        display: flex;
        justify-content: center;
        gap: 0.75rem;
        flex-wrap: wrap;
    }

        .button-group button,
        .button-group a {
            font-weight: 600;
            font-size: 0.875rem;
            padding: 0.5rem 1rem;
            border-radius: 50px;
            transition: all 0.3s ease;
            text-align: center;
        }

    .confirm-btn {
        background: linear-gradient(to right, #2b6cb0, #4c51bf); /* Blue gradient to match nav */
        color: #ffffff;
    }

        .confirm-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 16px rgba(76, 81, 191, 0.4);
            background: #1e40af; /* Darker blue on hover */
        }

    .back-btn {
        background: #6b7280; /* Gray for cancel action */
        color: #ffffff;
    }

        .back-btn:hover {
            background: #4b5563; /* Darker gray on hover */
            transform: translateY(-3px);
            box-shadow: 0 6px 16px rgba(107, 114, 128, 0.3);
        }

    /* Dark Mode Adjustments */
    .dark .checkout-container {
        background: linear-gradient(180deg, #4b5563, #2d3748); /* Darker shades for contrast */
    }

        .dark .checkout-container h2 {
            color: #fefce8; /* Light amber for text */
        }

    .dark .error-message {
        background: #7f1d1d; /* Darker red background */
        color: #f87171; /* Lighter red text */
    }

    .dark .checkout-card {
        background: #2d3748; /* Dark gray to match home page dark mode */
        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.3);
        border-color: rgba(96, 165, 250, 0.3); /* Light blue border in dark mode */
    }

    .dark .cart-item-card {
        background: #4b5563; /* Slightly lighter gray for contrast */
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }

        .dark .cart-item-card .no-image {
            background: #6b7280; /* Darker amber-gray for placeholder */
            color: #a0aec0; /* Lighter gray for text */
        }

        .dark .cart-item-card h3 {
            color: #fefce8; /* Light amber for headings */
        }

        .dark .cart-item-card p {
            color: #a0aec0; /* Lighter gray for secondary text */
        }

        .dark .cart-item-card .price-info .original-price {
            color: #a0aec0; /* Lighter gray for secondary text */
        }

        .dark .cart-item-card .price-info .discounted-price {
            color: #6ee7b7; /* Lighter green for discounted price */
        }

    .dark .total-section p,
    .dark .claim-code-note {
        color: #e2e8f0; /* Light gray for primary text */
    }

    .dark .confirm-btn {
        background: linear-gradient(to right, #1e40af, #2b6cb0); /* Darker blue gradient */
    }

        .dark .confirm-btn:hover {
            background: #4c51bf;
        }

    .dark .back-btn {
        background: #4b5563; /* Darker gray in dark mode */
    }

        .dark .back-btn:hover {
            background: #6b7280;
        }
</style>

<div class="checkout-container">
    <h2>Checkout</h2>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="error-message">
            @TempData["ErrorMessage"]
        </div>
    }

    <div class="checkout-card">
        <!-- Cart Items Grid -->
        <div class="cart-items-grid">
            @foreach (var (cartItem, discountedPrice, onSale) in Model)
            {
                var book = cartItem.Book;
                <div class="cart-item-card">
                    @if (onSale)
                    {
                        <span class="sale-badge">On Sale</span>
                    }
                    @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                    {
                        <img src="@book.CoverImageUrl" alt="@book.Title" />
                    }
                    else
                    {
                        <div class="no-image">
                            <span>No Image</span>
                        </div>
                    }
                    <h3>@book.Title</h3>
                    <p>by @book.Author</p>
                    <p class="price-info">
                        @if (discountedPrice < book.Price)
                        {
                            <span class="original-price">Price: $@book.Price</span>
                            <span class="discounted-price">Now: $@discountedPrice</span>
                        }
                        else
                        {
                            <span>Price: $@book.Price</span>
                        }
                    </p>
                    <p>Quantity: @cartItem.Quantity</p>
                    <p>Total: $@(discountedPrice * cartItem.Quantity)</p>
                </div>
            }
        </div>

        <!-- Total Price and Discount -->
        <div class="total-section">
            <p>Total Items: @ViewBag.TotalItems</p>
            <p>Total Price: $@ViewBag.TotalPrice</p>
            @if (ViewBag.DiscountAmount > 0)
            {
                <p>Discount: $@ViewBag.DiscountAmount</p>
            }
            else
            {
                <p>No Discounts Applied</p>
            }
            <p class="final-price">Final Price: $@ViewBag.FinalPrice</p>
        </div>

        <!-- Note About Claim Code -->
        <div class="claim-code-note">
            <p>After confirming your order, you will receive a claim code on the My Orders page. Present your membership ID and claim code at the store for in-store pickup.</p>
        </div>

        <!-- Confirm Order and Back to Cart Buttons -->
        <form asp-controller="Cart" asp-action="CheckoutConfirmed" method="post" class="button-group">
            <button type="submit" class="confirm-btn">Confirm Order</button>
        </form>
        <div class="button-group">
            <a asp-controller="Cart" asp-action="Cart" class="back-btn">Back to Cart</a>
        </div>
    </div>
</div>